/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, type JSX } from 'react'
import { useGLTF, Html} from '@react-three/drei'
import { type GLTF } from 'three-stdlib'
import desktop from '/models/room/Desktop.glb?url'


type GLTFResult = GLTF & {
  nodes: {
    Node1: THREE.Mesh
    Node4: THREE.Mesh
    Node5: THREE.Mesh
    Node6: THREE.Mesh
    Node7: THREE.Mesh
    Node8: THREE.Mesh
    Node9: THREE.Mesh
    Node5001: THREE.Mesh
    Node6001: THREE.Mesh
    Node1001: THREE.Mesh
    lamp_s: THREE.Mesh
  }
  materials: {
    ['#090909FF.001']: THREE.MeshStandardMaterial
    ['#404040FF.001']: THREE.MeshStandardMaterial
    ['#7E7E7EFF.001']: THREE.MeshStandardMaterial
    ['#FFFFFFFF.002']: THREE.MeshStandardMaterial
    ['#339987FF.001']: THREE.MeshStandardMaterial
    ['#FF5F1CFF.001']: THREE.MeshStandardMaterial
    ['#E2A60BFF.001']: THREE.MeshStandardMaterial
    ['#C2D8E8FF.001']: THREE.MeshStandardMaterial
    ['#204369FF.001']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
  }
}

  const MONITOR_MATERIAL = new THREE.MeshPhysicalMaterial({
    color: 0x000000, // light gray metallic
    metalness: 1.0, // fully metallic
    roughness: 0.9, // high roughness for coarse look
    opacity: 1.0,
    transparent: false,
    transmission: 0.0, // no transmission for metal
    clearcoat: 0.1, // minimal clearcoat for a less shiny finish
    clearcoatRoughness: 0.8, // rough clearcoat
  });



export function Desktop({ monitor_click_event, ...props }: { monitor_click_event: any } & JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(desktop) as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0.104, 0.63, 0.174]} rotation={[1.549, 1.453, -1.549]} scale={0.001}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Node1.geometry}
          material={materials['#090909FF.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Node4.geometry}
          material={materials['#404040FF.001']}
          position={[0, -0.009, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Node5.geometry}
          material={materials['#7E7E7EFF.001']}
          position={[0, -0.009, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Node6.geometry}
          material={materials['#FFFFFFFF.002']}
          position={[0, -0.009, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Node7.geometry}
          material={materials['#339987FF.001']}
          position={[0, -0.009, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Node8.geometry}
          material={materials['#FF5F1CFF.001']}
          position={[0, -0.009, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Node9.geometry}
          material={materials['#E2A60BFF.001']}
          position={[0, -0.009, 0]}
        />
      </group>
      <group position={[-0.206, 0.621, 0.171]} rotation={[1.467, -1.568, -0.109]} scale={0.001}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Node5001.geometry}
          material={materials['#C2D8E8FF.001']}
          rotation={[-0.783, 1.564, -0.783]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Node6001.geometry}
          material={MONITOR_MATERIAL}
          rotation={[-0.783, 1.564, -0.783]}
          onClick={(e) =>{monitor_click_event(e);}}
        >
        </mesh>
      </group>
      <group position={[0, 0.582, 0]} rotation={[0, 1.57, 0]} scale={0.001}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Node1001.geometry}
          material={materials['Material.002']}
          position={[-79.352, 0, 0.021]}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.lamp_s.geometry}
        material={nodes.lamp_s.material}
        position={[-0.182, 0.771, -0.432]}
        rotation={[1.58, -0.005, -0.554]}
        scale={1.5}
      />
    </group>
  )
}

useGLTF.preload(desktop)
