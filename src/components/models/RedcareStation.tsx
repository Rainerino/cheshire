/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, type JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import { type GLTF } from 'three-stdlib'
import station from '/models/stations/redcare_one_piece.glb?url'


  
  const STATION_MATERIAL = new THREE.MeshPhysicalMaterial({
    color: 0x0a0808,
    metalness: 0.75,
    roughness: 0.5,
    opacity: 1.0,
    transparent: false,
    transmission: 0.99,
    clearcoat: 1.0,
    clearcoatRoughness: 0.25,
  });
  
  const ROBOT_MATERIAL = new THREE.MeshPhysicalMaterial({
    color: 0xff5733,
    metalness: 0.75,
    roughness: 0.5,
    opacity: 0.3,
    transparent: true,
    transmission: 0.99,
    clearcoat: 1.0,
    clearcoatRoughness: 0.25,
  });


type GLTFResult = GLTF & {
  nodes: {
    redcare_01: THREE.Mesh
  }
  materials: {}
}

export function RedcareStation(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(station) as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        name="redcare_01"
        castShadow
        receiveShadow
        geometry={nodes.redcare_01.geometry}
        material={STATION_MATERIAL}
      />
    </group>
  )
}

useGLTF.preload(station)
