/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/


import * as THREE from 'three'
import React, { useRef, type JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import { type GLTF } from 'three-stdlib'
import tote from '/models/stations/pick_tote.glb?url'

const TOTE_MATERIAL = new THREE.MeshPhysicalMaterial({
color: 0x0000ff,
metalness: 0.25,
// roughness: 0.1,
opacity: 1.0,
transparent: false,
transmission: 0.99,
clearcoat: 1.0,
clearcoatRoughness: 0.25,
});

type GLTFResult = GLTF & {
  nodes: {
    tote_mesh_0: THREE.Mesh
  }
  materials: {}
}

export function RedcareTote(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(tote) as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        name="tote_mesh_0"
        castShadow
        receiveShadow
        geometry={nodes.tote_mesh_0.geometry}
        material={TOTE_MATERIAL}
      />
    </group>
  )
}

useGLTF.preload(tote)
