/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import room from '/models/room/Env.glb?url'
import * as THREE from 'three'
import type { MathProps, ReactProps, EventHandlers, InstanceProps } from '@react-three/fiber'
import type { Mutable, Overwrite } from '@react-three/fiber/dist/declarations/src/core/utils'
import type { JSX } from 'react/jsx-runtime'

export function Room(props: JSX.IntrinsicAttributes & Mutable<Overwrite<Partial<Overwrite<THREE.Group<THREE.Object3DEventMap>, MathProps<THREE.Group<THREE.Object3DEventMap>> & ReactProps<THREE.Group<THREE.Object3DEventMap>> & Partial<EventHandlers>>>, Omit<InstanceProps<THREE.Group<THREE.Object3DEventMap>, typeof THREE.Group>, "object">>>) {
  const { nodes, materials } = useGLTF(room)
  return (
    <group {...props} dispose={null}>
      <group position={[-3.515, 0, -2.55]} rotation={[-Math.PI, 0.001, -Math.PI]} scale={0.001}>
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Node1 as THREE.Mesh).geometry}
          material={materials['#BB935CFF.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Node10 as THREE.Mesh).geometry}
          material={materials['#000000FF.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Node2 as THREE.Mesh).geometry}
          material={materials['#BB935CFF.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Node3 as THREE.Mesh).geometry}
          material={materials['#BB935CFF.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Node4 as THREE.Mesh).geometry}
          material={materials['#BB935CFF.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Node5 as THREE.Mesh).geometry}
          material={materials['#BB935CFF.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Node6 as THREE.Mesh).geometry}
          material={materials['#BB935CFF.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Node7 as THREE.Mesh).geometry}
          material={materials['#BB935CFF.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Node8 as THREE.Mesh).geometry}
          material={materials['#855A1DFF.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Node9 as THREE.Mesh).geometry}
          material={materials['#F2E2C5FF.001']}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.Node1001 as THREE.Mesh).geometry}
        material={materials['x1.001']}
        position={[-2.226, 0.057, 1.936]}
        rotation={[1.581, 0, -2.049]}
        scale={0.001}
      />
    </group>
  )
}

useGLTF.preload(room)
